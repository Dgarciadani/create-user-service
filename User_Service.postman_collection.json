{
	"info": {
		"_postman_id": "a7d60045-60fa-4b31-bccc-7a912f15c557",
		"name": "User_Service_Nisum",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18077912"
	},
	"item": [
		{
			"name": "Create New User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"pm.test(\"Token is not null\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.token).not.equal(null);",
							"    pm.expect(jsonData.token).not.equal(undefined);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Juan Rodriguez\",\n    \"email\": \"juan@rodripuez.com\",\n    \"password\": \"Hunter2!\",\n    \"phones\": [\n        {\n            \"number\": \"1234567\",\n            \"citycode\": \"1\",\n            \"countrycode\": \"57\"\n        }\n    ]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/api/v1/users/register",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"v1",
						"users",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Email already registered",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 409\", function () {",
							"    pm.response.to.have.status(409);",
							"});",
							"",
							"pm.test(\"Email already registered\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.message).to.contain(\"Email already registered\")",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Juan Rodriguez\",\n    \"email\": \"pedro@pancho.com\",\n    \"password\": \"Hunter2!\",\n    \"phones\": [\n        {\n            \"number\": \"1234567\",\n            \"citycode\": \"1\",\n            \"countrycode\": \"57\"\n        }\n    ]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/api/v1/users/register",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"v1",
						"users",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Password format invalid",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Invalid password format\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.message).to.contain(\"Invalid password format\")",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Juan Rodriguez\",\n    \"email\": \"pedrooo@pancho.com\",\n    \"password\": \"hunter!\",\n    \"phones\": [\n        {\n            \"number\": \"1234567\",\n            \"citycode\": \"1\",\n            \"countrycode\": \"57\"\n        }\n    ]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/api/v1/users/register",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"v1",
						"users",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Empty field",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Empty field\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.message).to.contain(\"is required\")",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"pedrooo@pancho.com\",\n    \"password\": \"Hunter2!\",\n    \"phones\": [\n        {\n            \"number\": \"1234567\",\n            \"citycode\": \"1\",\n            \"countrycode\": \"57\"\n        }\n    ]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/api/v1/users/register",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"v1",
						"users",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Disable User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Your test name\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.isactive).to.eql(false);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJwZWRyb0BwYW5jaG8uY29tIiwiZXhwIjoxNjYxMjIyNzA4LCJpYXQiOjE2NjA4NjI3MDh9.VNyavkxUyjPDDXYcbUJjEDNYIlcBYf9251SDWl4RQyI",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{URL}}/api/v1/users/disable?email=pedro@pancho.com",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"v1",
						"users",
						"disable"
					],
					"query": [
						{
							"key": "email",
							"value": "pedro@pancho.com"
						}
					]
				},
				"description": "Este endpoint requiere que se le otorguen autorización para realizar la consulta.\n\nEn forma de Bearer token.\n\nEl mismo es otorgado después de realizar una creación de usuario, en el JSON.token."
			},
			"response": []
		},
		{
			"name": "Disable User with out authotization",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 403\", function () {",
							"    pm.response.to.have.status(403);",
							"});",
							"pm.test(\"Your test name\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.message).to.eql(\"Access Denied\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{URL}}/api/v1/users/disable?email=pedro@pancho.com",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"v1",
						"users",
						"disable"
					],
					"query": [
						{
							"key": "email",
							"value": "pedro@pancho.com"
						}
					]
				}
			},
			"response": []
		}
	]
}